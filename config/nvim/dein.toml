[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
  if executable('rg')
    call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])
    call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
  endif
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
  let g:webdevicons_enable = 1

  let g:webdevicons_enable_nerdtree = 1

  let g:WebDevIconsUnicodeDecorateFolderNodes = 1
  let g:DevIconsEnableFoldersOpenClose = 1
  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
  let g:DevIconsDefaultFolderOpenSymbol = ''
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

  let NERDTreeShowHidden = 1
  let g:NERDTreeDirArrowExpandable = '▸'
  let g:NERDTreeDirArrowCollapsible = '▾'
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
  let g:NERDTreeLimitedSyntax = 1
  let g:NERDTreeSyntaxDisableDefaultExtensions = 1
  let g:NERDTreeDisableExactMatchHighlight = 1
  let g:NERDTreeDisablePatternMatchHighlight = 1
  let g:NERDTreeSyntaxEnabledExtensions = ['rb', 'go', 'js', 'jsx', 'css', 'scss', 'html', 'sh'. 'zsh', 'conf', 'vim', 'md', 'yml', 'toml']
'''

[[plugins]]
repo = 'w0rp/ale'
build = '''
  brew install tflint && \
  brew install shellcheck && \
  brew install golangci/tap/golangci-lint && \
  gem install rubocop && \
  npm install -g eslint && \
  npm install -g tslint && \
  npm install -g eslint-plugin-vue && \
  luarocks install luacheck && \
  pip3 install -U flake8
'''
hook_add = '''
  " General
  let g:ale_sign_column_always = 1
  let g:ale_open_list = 1
  let g:ale_lint_on_text_changed = 'never'
  let g:ale_lint_on_enter = 0
  let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
  let g:ale_sign_error = '⤫'
  let g:ale_sign_warning = '⚠'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

  " Lint
  let g:ale_linters = {
    \ 'c': ['clang'],
    \ 'c++': ['clang'],
    \ 'go': ['golangci-lint'],
    \ 'php': ['php'],
    \ 'perl': ['perl'],
    \ 'ruby': ['ruby', 'rubocop'],
    \ 'python': ['flake8'],
    \ 'javascript': ['eslint'],
    \ 'typescript': ['eslint'],
    \ 'Terraform': ['tflint']
  \ }
  let g:ale_ruby_rubocop_executable = 'bundle'
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
    \ 'colorscheme': 'darcula',
    \ 'active': {
    \   'left': [ ['mode', 'paste'],
    \             ['fugitive', 'filename', 'gitgutter', 'ale']
    \           ],
    \   'right': [ ['lineinfo'], ['percent'],
    \              ['ale_error', 'ale_warning', 'ale_ok', 'charcode', 'fileformat', 'fileencoding', 'filetype']
    \            ]
    \ },
    \ 'component': {
    \   'lineinfo': ' %3l:%-2v'
    \ },
    \ 'component_function_visible_condition': {
    \   'mode': 1,
    \ },
    \ 'component_expand': {
    \   'ale_error': 'LightLineAleError',
    \   'ale_warning': 'LightLineAleWarning',
    \   'ale_ok': 'LightLineAleOk',
    \ },
    \ 'component_type': {
    \   'ale_error': 'error',
    \   'ale_waring': 'waring',
    \   'ale_ok': 'ok',
    \ },
    \ 'component_function': {
    \   'fugitive': 'LightlineFugitive',
    \   'gitgutter': 'LightlineGitGutter',
    \   'filename': 'LightlineFilename',
    \   'filetype': 'LightlineFiletype',
    \   'fileformat': 'LightlineFileformat',
    \   'ale': 'ALEGetStatusLine'
    \ },
    \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
    \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },
  \ }
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'ap/vim-buftabline'
hook_add = '''
  let g:buftabline_numbers = 0
  let g:buftabline_indicators = 1
  let g:buftabline_separators = 1
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_source = '''
  let g:neoterm_default_mod = 'horizontal'
  let g:neoterm_automap_keys = ',tt'
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
  let g:precious_enable_switch_CursorMoved = {
    \ "*" : 0
  \}
  let g:precious_enable_switch_CursorMoved_i = {
    \ "*" : 0
  \}

  augroup test
    autocmd!
    autocmd InsertEnter * :PreciousSwitch
    autocmd InsertLeave * :PreciousReset
  augroup END
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
build = ':UpdateRemotePlugins'
on_i = 1
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'sbdchd/neoformat'
hook_add = '''
  " For Python
  let g:neoformat_enabled_python = ['yapf']
  let g:neoformat_python_yapf = {
    \ 'exe': 'yapf',
    \ 'args' : ['--style=pep8'],
  \ }

  " For golang
  let g:neoformat_enabled_go = ['goimports', 'gofmt']

  augroup fmt
    autocmd!
    autocmd BufWritePre *.js,*.jsx,*.py,*.go Neoformat
  augroup end
'''

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = '/usr/local/opt/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \   'rg --column --line-number --no-heading --color=always '.shellescape(<q-args>), 1,
    \   <bang>0 ? fzf#vim#with_preview('up:60%')
    \           : fzf#vim#with_preview('right:50%:hidden', '?'),
    \   <bang>0)
'''

# For vim-lsp
[[plugins]]
repo = 'prabirshrestha/async.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
[[plugins]]
repo = 'mattn/vim-lsp-settings'
[[plugins]]
repo = 'mattn/vim-lsp-icons'
[[plugins]]
repo = 'hrsh7th/vim-vsnip'
[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
